services:
  gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile.dev
    depends_on:
      - gateway-db
    develop:
      watch:
        - action: sync
          path: ./apps/api-gateway/src
          target: /app/apps/api-gateway/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    ports:
      - 3000:3000
    environment:
      DB_HOST: gateway-db
      DB_PORT: 5432
      DB_USER: gateway
      DB_PW: gateway
      DB_DB: gateway
      PORT: 3000

  gateway-db:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: gateway
      POSTGRES_PASSWORD: gateway
      POSTGRES_DB: gateway

  auth-service:
    build:
      context: .
      dockerfile: ./apps/auth-service/Dockerfile.dev
    depends_on:
      - pg
      - gateway
    develop:
      watch:
        - action: sync
          path: ./apps/auth-service/src
          target: /app/apps/auth-service/src
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    environment:
      PG_HOST: pg
      PG_PORT: 5432
      PG_USER: test
      PG_PW: test
      PG_DB: auth
      GATEWAY_HOST: gateway
      GATEWAY_PORT: 3000
      PORT: 3010

  pg:
    image: postgres:alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: auth

# TODO setup volume for db